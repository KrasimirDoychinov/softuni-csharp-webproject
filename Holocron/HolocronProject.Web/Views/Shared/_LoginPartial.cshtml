@using Microsoft.AspNetCore.Identity
@using HolocronProject.Data.Models 
@inject SignInManager<Account> SignInManager
@inject UserManager<Account> UserManager
@inject AccountsService accountService
@{ 
    var account = UserManager.GetUserAsync(this.User);
}


<ul class="navbar-nav text-white ">
@if (SignInManager.IsSignedIn(User))
{
    

    if (accountService.IsAvatarImageSet(account.Result.Id))
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index"><img src="~/Images/AvatarImages/@accountService.GetAccountAvatarImagePath(account.Result.Id)?random=@ViewData["random"].ToString()" class="rounded-circle border border-warning " height="50" width="50" /></a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index"><img src="~/Images/AvatarImages/defaultAvatar.jpg?random=@ViewData["random"].ToString()" class="rounded-circle border border-warning" height="50" width="50" /></a>
        </li>
    }

    
    <li class="nav-item">
        
        <a  class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index">@User.Identity.Name</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-white">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
