// <auto-generated />
using System;
using HolocronProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HolocronProject.Data.Migrations
{
    [DbContext(typeof(HolocronDbContext))]
    [Migration("20201103133049_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("HolocronProject.Data.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AvatarImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ForumSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Achievement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.BaseThread", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseThreads");

                    b.HasData(
                        new
                        {
                            Id = "5ba028d8-75dd-4284-817a-bc0ab0d22792",
                            IsDeleted = false,
                            Title = "PVP"
                        },
                        new
                        {
                            Id = "2092ea46-e241-445d-b261-ddf9a60c316a",
                            IsDeleted = false,
                            Title = "PVE"
                        },
                        new
                        {
                            Id = "d96ee4f4-cda0-4128-939f-4aa27718641f",
                            IsDeleted = false,
                            Title = "RP"
                        },
                        new
                        {
                            Id = "3a107250-ad47-491b-af2d-ee73e55bfcbd",
                            IsDeleted = false,
                            Title = "Guides"
                        },
                        new
                        {
                            Id = "a9aa7461-e983-4cc6-a943-df87d77e7a2d",
                            IsDeleted = false,
                            Title = "Fashion"
                        });
                });

            modelBuilder.Entity("HolocronProject.Data.Models.BugReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("BugReports");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Character", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Backstory")
                        .IsRequired()
                        .HasMaxLength(25000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterType")
                        .HasColumnType("int");

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ForceAffiliation")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RaceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.HasIndex("ServerId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Class", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Faction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = "02f4a5a9-f669-4197-9c5e-149a1f833d00",
                            Faction = 2,
                            Name = "Juggernaut"
                        },
                        new
                        {
                            Id = "88e08ecf-2349-4f48-8767-8ae548571059",
                            Faction = 2,
                            Name = "Marauder"
                        },
                        new
                        {
                            Id = "8dc83559-7810-49a5-bb84-72770a9931e3",
                            Faction = 2,
                            Name = "Sorcerer"
                        },
                        new
                        {
                            Id = "7bddebbf-1d52-43e0-981d-5bdb76252d3d",
                            Faction = 2,
                            Name = "Assassin"
                        },
                        new
                        {
                            Id = "09888700-e616-46c0-bce5-3a6f30731a36",
                            Faction = 2,
                            Name = "Sniper"
                        },
                        new
                        {
                            Id = "c861a69e-a246-4b4d-b791-8c78863cfd83",
                            Faction = 2,
                            Name = "Operative"
                        },
                        new
                        {
                            Id = "03ef935a-d0a7-4cf9-aa80-848a059061dc",
                            Faction = 2,
                            Name = "Powertech"
                        },
                        new
                        {
                            Id = "4a075f15-6145-43d2-b360-ac6debb0b872",
                            Faction = 2,
                            Name = "Mercenary"
                        },
                        new
                        {
                            Id = "6f697343-f4f3-4870-b338-0a669cb0b425",
                            Faction = 1,
                            Name = "Gunslinger"
                        },
                        new
                        {
                            Id = "46b30953-2afd-4c83-b182-c50d96929610",
                            Faction = 1,
                            Name = "Scoundrel"
                        },
                        new
                        {
                            Id = "94858512-595d-4963-9165-1511c8b2377c",
                            Faction = 1,
                            Name = "Vanguard"
                        },
                        new
                        {
                            Id = "66728d65-3963-4d2c-a324-ba062d8cdd7e",
                            Faction = 1,
                            Name = "Commando"
                        },
                        new
                        {
                            Id = "2d7918a6-11b4-4975-9b15-96f481642331",
                            Faction = 1,
                            Name = "Sage"
                        },
                        new
                        {
                            Id = "4bc08106-f7ea-4ff4-9c0b-b763fd26ed0a",
                            Faction = 1,
                            Name = "Shadow"
                        },
                        new
                        {
                            Id = "83764afa-c3fd-473d-af98-acac81e232c3",
                            Faction = 1,
                            Name = "Sentinel"
                        },
                        new
                        {
                            Id = "7f7e9a34-a4c0-4b0c-a9ae-b6d9a4ab1372",
                            Faction = 1,
                            Name = "Guardian"
                        });
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Competition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.CompetitionCharacter", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "CompetitionId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionsCharacters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ThreadId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.PostReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("PostReports");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.PostTag", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostsTags");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Race", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = "668d1eab-9dd9-4027-a12e-426492f6f847",
                            Name = "Chiss"
                        },
                        new
                        {
                            Id = "d51be1c4-3470-4bc6-93e6-5f99a509e877",
                            Name = "Cyborg"
                        },
                        new
                        {
                            Id = "47413c38-aabe-4104-8e96-28bfe26651a9",
                            Name = "Human"
                        },
                        new
                        {
                            Id = "62a4515f-87e4-46a6-9be4-5fd4f1119909",
                            Name = "Miraluka"
                        },
                        new
                        {
                            Id = "71f228cf-6e42-4b49-b01f-0a3be18ccafe",
                            Name = "Mirialan"
                        },
                        new
                        {
                            Id = "7104306d-427c-4c69-a8ea-d0f1256f877f",
                            Name = "Rattaki"
                        },
                        new
                        {
                            Id = "13836c70-523f-4bab-b765-332990de4b83",
                            Name = "Sith Pureblood"
                        },
                        new
                        {
                            Id = "40abe7b6-471e-4998-abb7-ffc7a87930b6",
                            Name = "Twi'lek"
                        },
                        new
                        {
                            Id = "8d887ac2-03b1-4b3d-9f66-b29ffda99bc1",
                            Name = "Zabrak"
                        },
                        new
                        {
                            Id = "32f627d7-831f-4029-a7c0-fc28536439e5",
                            Name = "Cathar"
                        },
                        new
                        {
                            Id = "8589f4d4-daf4-4854-a24f-15d7c0a2c6da",
                            Name = "Togruta"
                        },
                        new
                        {
                            Id = "8f368480-c998-4ebb-b4a8-fbac0452485b",
                            Name = "Nautolan"
                        });
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Server", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = "5e326770-1898-454c-940b-91e185c20047",
                            IsDeleted = false,
                            Name = "Darth Malgus"
                        },
                        new
                        {
                            Id = "d27c8d98-eb6f-46a2-80fd-014e26d24e77",
                            IsDeleted = false,
                            Name = "Star Forge"
                        },
                        new
                        {
                            Id = "55b1e552-43f4-43bb-a420-7cbfe4694932",
                            IsDeleted = false,
                            Name = "Satele Shan"
                        },
                        new
                        {
                            Id = "d402f01a-e67e-4349-9548-26da89042cc1",
                            IsDeleted = false,
                            Name = "Tulak Hord"
                        },
                        new
                        {
                            Id = "89572c9b-1197-4678-8b96-ea9d026a79d5",
                            IsDeleted = false,
                            Name = "The Leviathan"
                        });
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Thread", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseThreadId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BaseThreadId");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Achievement", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Character", "Character")
                        .WithMany("Achievements")
                        .HasForeignKey("CharacterId");

                    b.HasOne("HolocronProject.Data.Models.Competition", "Competition")
                        .WithMany("Achievements")
                        .HasForeignKey("CompetitionId");

                    b.Navigation("Character");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.BugReport", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Account", "Account")
                        .WithMany("BugReports")
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Character", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Account", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId");

                    b.HasOne("HolocronProject.Data.Models.Class", "Class")
                        .WithMany("Characters")
                        .HasForeignKey("ClassId");

                    b.HasOne("HolocronProject.Data.Models.Race", "Race")
                        .WithMany("Characters")
                        .HasForeignKey("RaceId");

                    b.HasOne("HolocronProject.Data.Models.Server", "Server")
                        .WithMany("Characters")
                        .HasForeignKey("ServerId");

                    b.Navigation("Account");

                    b.Navigation("Class");

                    b.Navigation("Race");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.CompetitionCharacter", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Character", "Character")
                        .WithMany("Competitions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HolocronProject.Data.Models.Competition", "Competition")
                        .WithMany("Characters")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Post", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId");

                    b.HasOne("HolocronProject.Data.Models.Thread", "Thread")
                        .WithMany("Posts")
                        .HasForeignKey("ThreadId");

                    b.Navigation("Account");

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.PostReport", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Account", "Account")
                        .WithMany("PostReports")
                        .HasForeignKey("AccountId");

                    b.HasOne("HolocronProject.Data.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.PostTag", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HolocronProject.Data.Models.Tag", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Thread", b =>
                {
                    b.HasOne("HolocronProject.Data.Models.Account", "Account")
                        .WithMany("Threads")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HolocronProject.Data.Models.BaseThread", "BaseThread")
                        .WithMany("Threads")
                        .HasForeignKey("BaseThreadId");

                    b.Navigation("Account");

                    b.Navigation("BaseThread");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Account", b =>
                {
                    b.Navigation("BugReports");

                    b.Navigation("Characters");

                    b.Navigation("PostReports");

                    b.Navigation("Posts");

                    b.Navigation("Threads");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.BaseThread", b =>
                {
                    b.Navigation("Threads");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Character", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Competitions");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Class", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Competition", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Post", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Race", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Server", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Tag", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("HolocronProject.Data.Models.Thread", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
